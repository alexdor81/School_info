# Generated by Django 4.2.10 on 2024-03-20 02:13

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Checks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_column='Date', null=True, verbose_name='Дата проверки')),
            ],
            options={
                'verbose_name': 'Проверка',
                'verbose_name_plural': 'Проверки',
                'db_table': 'Checks',
            },
        ),
        migrations.CreateModel(
            name='Peers',
            fields=[
                ('nickname', models.CharField(db_column='Nickname', max_length=255, primary_key=True, serialize=False, verbose_name='Ник пира')),
                ('birthday', models.DateField(db_column='Birthday', null=True, verbose_name='День рождения')),
            ],
            options={
                'verbose_name': 'Пир',
                'verbose_name_plural': 'Пиры',
                'db_table': 'Peers',
            },
        ),
        migrations.CreateModel(
            name='Tasks',
            fields=[
                ('title', models.CharField(db_column='Title', max_length=255, primary_key=True, serialize=False, verbose_name='Название задания')),
                ('parent_task', models.CharField(db_column='ParentTask', default=0, max_length=255, null=True, verbose_name='Задание, которое является условием входа')),
                ('max_xp', models.BigIntegerField(db_column='MaxXP', default=0, null=True, verbose_name='Максимальное количество XP')),
            ],
            options={
                'verbose_name': 'Задание',
                'verbose_name_plural': 'Задания',
                'db_table': 'Tasks',
            },
        ),
        migrations.CreateModel(
            name='XP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xp_amount', models.BigIntegerField(db_column='XPAmount', verbose_name='Количество полученного XP')),
                ('check_xp', models.ForeignKey(db_column='Check', on_delete=django.db.models.deletion.CASCADE, to='sql.checks', verbose_name='Проверка')),
            ],
            options={
                'verbose_name': 'XP',
                'verbose_name_plural': 'XP',
                'db_table': 'XP',
            },
        ),
        migrations.CreateModel(
            name='Verter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('Start', 'Start'), ('Success', 'Success'), ('Failure', 'Failure')], db_column='State', max_length=10, verbose_name="Статус проверки Verter'ом")),
                ('time', models.TimeField(db_column='Time', null=True, verbose_name='Время проверки')),
                ('check_verter', models.ForeignKey(db_column='Check', on_delete=django.db.models.deletion.CASCADE, to='sql.checks', verbose_name='Проверка')),
            ],
            options={
                'verbose_name': "Проверка Verter'ом",
                'verbose_name_plural': "Проверки Verter'ом",
                'db_table': 'Verter',
            },
        ),
        migrations.CreateModel(
            name='TransferredPoints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_amount', models.BigIntegerField(db_column='PointsAmount', default=0, null=True, verbose_name='Количество переданных поинтов')),
                ('checked_peer', models.ForeignKey(db_column='CheckedPeer', on_delete=django.db.models.deletion.CASCADE, related_name='checked_peer', to='sql.peers', verbose_name='Ник проверяемого пира')),
                ('checking_peer', models.ForeignKey(db_column='CheckingPeer', on_delete=django.db.models.deletion.CASCADE, related_name='checking_peer', to='sql.peers', verbose_name='Ник проверяющего пира')),
            ],
            options={
                'verbose_name': 'Переданный пир поинт',
                'verbose_name_plural': 'Переданные пир поинты',
                'db_table': 'TransferredPoints',
            },
        ),
        migrations.CreateModel(
            name='TimeTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_column='Date', null=True, verbose_name='Дата')),
                ('time', models.TimeField(db_column='Time', null=True, verbose_name='Время')),
                ('state', models.IntegerField(db_column='State', verbose_name='Состояние (1 - пришел, 2 - вышел)')),
                ('peer', models.ForeignKey(db_column='Peer', on_delete=django.db.models.deletion.CASCADE, to='sql.peers', verbose_name='Ник пира')),
            ],
            options={
                'verbose_name': 'Посещение кампуса',
                'verbose_name_plural': 'Посещения кампуса',
                'db_table': 'TimeTracking',
            },
        ),
        migrations.CreateModel(
            name='Recommendations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('peer', models.ForeignKey(db_column='Peer', on_delete=django.db.models.deletion.CASCADE, related_name='peer', to='sql.peers', verbose_name='Ник пира, который рекомендует')),
                ('recommended_peer', models.ForeignKey(db_column='RecommendedPeer', on_delete=django.db.models.deletion.CASCADE, related_name='recommended_peer', to='sql.peers', verbose_name='Ник пира, которого рекомендуют')),
            ],
            options={
                'verbose_name': 'Рекомендация',
                'verbose_name_plural': 'Рекомендации',
                'db_table': 'Recommendations',
            },
        ),
        migrations.CreateModel(
            name='P2P',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('Start', 'Start'), ('Success', 'Success'), ('Failure', 'Failure')], db_column='State', max_length=10, verbose_name='Статус проверки')),
                ('time', models.TimeField(db_column='Time', null=True, verbose_name='Время проверки')),
                ('check_2p2', models.ForeignKey(db_column='Check', on_delete=django.db.models.deletion.CASCADE, to='sql.checks', verbose_name='Проверка')),
                ('checking_peer', models.ForeignKey(db_column='CheckingPeer', on_delete=django.db.models.deletion.CASCADE, to='sql.peers', verbose_name='Ник проверяющего пира')),
            ],
            options={
                'verbose_name': 'P2P проверка',
                'verbose_name_plural': 'P2P проверки',
                'db_table': 'P2P',
            },
        ),
        migrations.CreateModel(
            name='Friends',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('peer1', models.ForeignKey(db_column='Peer1', on_delete=django.db.models.deletion.CASCADE, related_name='peer1', to='sql.peers', verbose_name='Ник первого пира')),
                ('peer2', models.ForeignKey(db_column='Peer2', on_delete=django.db.models.deletion.CASCADE, related_name='peer2', to='sql.peers', verbose_name='Ник второго пира')),
            ],
            options={
                'verbose_name': 'Друг',
                'verbose_name_plural': 'Друзья',
                'db_table': 'Friends',
            },
        ),
        migrations.AddField(
            model_name='checks',
            name='peer',
            field=models.ForeignKey(db_column='Peer', on_delete=django.db.models.deletion.CASCADE, to='sql.peers', verbose_name='Ник пира'),
        ),
        migrations.AddField(
            model_name='checks',
            name='task',
            field=models.ForeignKey(db_column='Task', on_delete=django.db.models.deletion.CASCADE, to='sql.tasks', verbose_name='Название задания'),
        ),
        migrations.AddConstraint(
            model_name='xp',
            constraint=models.UniqueConstraint(fields=('check_xp', 'xp_amount'), name='unique_xp'),
        ),
        migrations.AddConstraint(
            model_name='verter',
            constraint=models.UniqueConstraint(fields=('check_verter', 'state', 'time'), name='unique_verter'),
        ),
        migrations.AddConstraint(
            model_name='p2p',
            constraint=models.UniqueConstraint(fields=('check_2p2', 'checking_peer', 'state', 'time'), name='unique_p2p'),
        ),
        migrations.AddConstraint(
            model_name='checks',
            constraint=models.UniqueConstraint(fields=('peer', 'task', 'date'), name='unique_check'),
        ),
    ]
